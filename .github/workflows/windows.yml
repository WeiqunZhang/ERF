name: Windows

on: [push, pull_request]

concurrency:
  group: ${{ github.ref }}-${{ github.head_ref }}-windows
  cancel-in-progress: true

jobs:
  WIN32-MSVC10:
    name: WIN32 MSVC@19.29
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set Up Cache
      uses: actions/cache@v4
      with:
        path: ~/.ccache
        key: ccache-${{ github.workflow }}-${{ github.job }}-git-${{ github.sha }}
        restore-keys: |
             ccache-${{ github.workflow }}-${{ github.job }}-git-
    - name: Install Ccache
      run: |
        Invoke-WebRequest https://github.com/ccache/ccache/releases/download/v4.10/ccache-4.10-windows-x86_64.zip -OutFile ccache-4.10-windows-x86_64.zip
        Expand-Archive ccache-4.10-windows-x86_64.zip

    - name: Configure Project and Generate Build System
      run: |
        cmake -S . -B build `
          -DCMAKE_INSTALL_PREFIX:PATH=${{runner.workspace}}/ERF/install `
          -DCMAKE_BUILD_TYPE:STRING=Debug `
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache `
          -DERF_DIM:STRING=3 `
          -DERF_ENABLE_MPI:BOOL=OFF `
          -DERF_ENABLE_TESTS:BOOL=ON `
          -DERF_ENABLE_ALL_WARNINGS:BOOL=OFF `
          -DERF_ENABLE_FCOMPARE:BOOL=ON `
          ${{github.workspace}};

    - name: Compile and Link
      run: |
        $ccachepath = Join-Path $pwd "ccache-4.10-windows-x86_64"
        $Env:PATH += ";$ccachepath"
        $ccachecachedir = Join-Path $HOME ".ccache"
        $Env:CCACHE_DIR="$ccachecachedir"
        $Env:CCACHE_COMPRESS='1'
        $Env:CCACHE_COMPRESSLEVEL='10'
        $Env:CCACHE_MAXSIZE='500M'
        ccache --version
        ccache -s -v
        ccache -z

        cmake --build build --parallel 4 --verbose

        ccache -s -v

    - name: CMake Tests # see file ERF/Tests/CTestList.cmake
      run: |
        ctest -L regression -VV
      working-directory: ${{runner.workspace}}/ERF/build

  save_pr_number:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Save PR number
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          echo $PR_NUMBER > pr_number.txt
      - uses: actions/upload-artifact@v3
        with:
          name: pr_number
          path: pr_number.txt
          retention-days: 1
